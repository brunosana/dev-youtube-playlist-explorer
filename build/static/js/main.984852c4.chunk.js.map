{"version":3,"sources":["Pages/Home/styles.ts","Pages/Home/index.tsx","Pages/Playlists/styles.ts","services/api.ts","services/AddPlaylistService.ts","Pages/Playlists/index.tsx","Pages/Videos/styles.ts","services/GetVideosFromPlaylistService.ts","Pages/Videos/index.tsx","Pages/Watch/styles.ts","Pages/Watch/index.tsx","Components/Header/styles.ts","Components/Header/index.tsx","styles/Global.ts","App.tsx","index.tsx"],"names":["Container","styled","div","TitleContainer","Home","size","to","Form","form","props","hasError","css","PlaylistsContainer","Error","span","api","axios","create","baseURL","AppPlaylistService","url","playlistId","split","storagedItems","localStorage","getItem","data","JSON","parse","find","play","id","get","params","part","key","process","maxResults","response","status","statusText","result","playlistDescription","items","snippet","description","join","playlistDescriptionLimited","length","substring","playlist","channelId","channelTitle","title","thumbnail","thumbnails","high","Playlists","useState","setUrl","error","setError","playlists","setPlaylists","e","a","preventDefault","addPlaylistService","AddPlaylistService","execute","newPlaylist","message","useEffect","setItem","stringify","onSubmit","value","onChange","target","placeholder","type","map","Header","PlaylistInfo","VideoContainer","Loading","GetVideosFromPlaylistService","videos","forEach","video","push","videoid","resourceId","videoId","thumb","playlistVideos","hasMore","nextPageToken","Video","setPlaylist","setVideos","setStatus","useRouteMatch","playlistID","findIndex","then","substr","ButtonArea","Watch","playlistid","videoID","opts","width","height","playerVars","Nav","nav","showSidebar","setShowSideBar","handleShowSideBar","onClick","createGlobalStyle","App","path","exact","component","Playlist","Global","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.984852c4.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n    display: flex;\n    height: 100vh;\n    flex-direction: column;\n    max-width: 1000px;\n    margin: 0 auto;\n    padding: 0 15px;\n    color: #FFF;\n    justify-content: center;\n    align-items: center;\n    h1{\n        font-size: 50px;\n    }\n\n    a{\n        font-size: 25px;\n        font-weight: bold;\n        text-decoration: none;\n        display: flex;\n        width: 300px;\n        height: 50px;\n        align-items: center;\n        justify-content: center;\n        color: #FFF;\n        background: #FF0000;\n        border-radius: 25px;\n        margin-top: 35px;\n\n        transition: color 0.2s, background 0.2s;\n\n        &:hover{\n            color: #FF0000;\n            background: #FFF;\n        }\n\n    }\n\n    @media (max-width: 728px){\n        height: 75vh;\n        h1{\n            font-size: 22px;\n        }\n        p{\n            font-size: 14px;\n        }\n        a{\n            font-size: 20px;\n            width: 200px;\n            height: 45px;\n        }\n        svg{\n            width: 90px;\n            height: auto;\n        }\n    }\n\n`;\n\nexport const TitleContainer = styled.div`\n    display: flex;\n    align-items: center;\n    transition: color 0.2s;\n\n    svg{\n        margin-right: 10px;\n    }\n\n    div{\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n    }\n\n`;\n","import React from 'react';\nimport { AiFillYoutube } from 'react-icons/ai';\nimport { Link } from 'react-router-dom';\nimport { Container, TitleContainer } from './styles';\n\nconst Home: React.FC = () => (\n  <>\n    <Container>\n      <TitleContainer>\n        <AiFillYoutube size={120} />\n        <div>\n          <h1>Youtube Playlist Explorer</h1>\n          <p>Store your playlists and explore them</p>\n        </div>\n      </TitleContainer>\n      <Link to=\"/playlists\">Start</Link>\n    </Container>\n  </>\n);\n\nexport default Home;\n","import styled, { css } from 'styled-components';\n\ninterface FormProps{\n    hasError: boolean;\n}\n\nexport const Form = styled.form<FormProps>`\n    display: flex;\n    width: 100%;\n    margin: 0 5%;\n    input{\n        flex: 1;\n        height: 50px;\n        border: none;\n        ${(props) => props.hasError && css`border: 2px solid #FF0000;`}\n        border-radius: 13px 0 0 13px;\n        padding: 0 15px;\n    }\n\n    button{\n        border: none;\n        width: 140px;\n        background: #FF0000;\n        color: #FFF;\n        font-size: 20px;\n        font-weight: bold;\n        border-radius: 0 13px 13px 0;\n        transition: color 0.2s, background 0.2s;\n        &:hover {\n            cursor: pointer;\n            color: #FF0000;\n            background: #FFF;\n        }\n\n    }\n\n`;\n\nexport const PlaylistsContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    margin: 0 5%;\n    margin-top: 80px;\n\n    a{\n        display: flex;\n        text-decoration: none;\n        color: #fff;\n        background: #FF0000;\n        align-items: center;\n        justify-content: start;\n        padding: 10px 15px;\n        border-radius: 13px;\n        transition: transform 0.2s, background 0.2s;\n        #videoIcon{\n            margin-right: 20px;\n        }\n        #ClickIcon {\n            margin-left: auto;\n        }\n        div{\n            word-wrap: break-word;\n            strong{\n            font-size: 26px;\n            text-overflow: ellipsis;\n            span{\n                font-size: 14px;\n            }\n        }\n        }\n\n        p{\n            max-width: 60vw;\n            font-size: 14px;\n            word-wrap: break-word;\n            text-overflow: ellipsis;\n            overflow: hidden;\n            overflow-wrap: break-word;\n            white-space: pre-line;\n        }\n\n        &:hover{\n            background: #af0404;\n            transform: translateX(15px);\n        }\n\n        & + a {\n            margin-top: 15px;\n        }\n        svg{\n            width: auto !important;\n            height: auto !important;\n        }\n    }\n\n    @media (max-width: 1025px){\n        a {\n            div {\n                strong {\n                    font-size: 20px;\n                }\n            }\n            svg{\n                width: 50px;\n            }\n        }\n    }\n\n`;\n\nexport const Container = styled.div`\n    max-width: 1000px;\n    display: flex;\n    flex-direction: column;\n    margin: 0 auto;\n    padding: 0 15px;\n    justify-content: center;\n    align-items: center;\n\n    h1{\n        display: flex;\n        align-items: center;\n        font-size: 45px;\n        color: #FFF;\n        margin: 0 5%;\n        margin-top: 70px;\n        margin-bottom: 20px;\n        svg{\n            margin-right: 8px;\n        }\n    }\n\n    @media (max-width: 654px){\n        h1{\n            font-size: 22px;\n        }\n    }\n\n`;\n\nexport const Error = styled.span`\n    width: 100%;\n    color: #FF0000;\n    font-size: 16px;\n`;\n","import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'https://www.googleapis.com/youtube/v3/',\n});\n\nexport default api;\n","import api from './api';\n\ninterface ResponseData {\n    items: Snippet[];\n}\n\ninterface Snippet{\n    id: string;\n    snippet: {\n        channelId: string;\n        title: string;\n        description: string;\n        thumbnails: {\n            high: {url: string;}\n        }\n    }\n    channelTitle: string;\n}\n\ninterface Playlist{\n    id: string;\n    channelId: string;\n    channelTitle: string;\n    title: string;\n    description: string;\n    thumbnail?: string;\n}\n\ninterface Response{\n    id: string;\n    channelId: string;\n    channelTitle: string;\n    title: string;\n    description: string;\n    thumbnail?: string;\n}\n\nclass AppPlaylistService {\n  public async execute(url: string): Promise<Response> {\n    const playlistId = url.split('playlist?list=')[1];\n    if (!playlistId) {\n      throw new Error('Invalid playlist URL');\n    }\n\n    const storagedItems = localStorage.getItem('@YoutubePlaylistExplorer::playlists');\n    if (storagedItems) {\n      const data = JSON.parse(storagedItems) as Playlist[];\n      const checkDuplicatedPlaylistID = data.find((play) => play.id === playlistId);\n      if (checkDuplicatedPlaylistID) {\n        throw new Error('This playlist is already showing');\n      }\n    }\n\n    const response = await api.get('/playlists', {\n      params: {\n        part: 'snippet',\n        key: process.env.REACT_APP_GOOGLE_API_KEY,\n        id: playlistId,\n        maxResults: 50,\n      },\n    });\n\n    if (response.status !== 200 && response.statusText !== 'ok') {\n      throw new Error('Error on get playlist from Google API');\n    }\n\n    const result = response.data as ResponseData;\n\n    const playlistDescription = result.items[0].snippet.description.split('\\n').join('. ');\n    const playlistDescriptionLimited = playlistDescription.length > 100\n      ? `${playlistDescription.substring(0, 100)}...`\n      : playlistDescription;\n\n    const playlist: Response = {\n      id: result.items[0].id,\n      channelId: result.items[0].snippet.channelId,\n      channelTitle: result.items[0].channelTitle,\n      title: result.items[0].snippet.title,\n      description: playlistDescriptionLimited,\n      thumbnail: result.items[0].snippet.thumbnails.high.url,\n    };\n\n    return playlist;\n  }\n}\n\nexport default AppPlaylistService;\n","import React, { FormEvent, useState, useEffect } from 'react';\n\nimport { AiFillYoutube, AiOutlineCaretRight } from 'react-icons/ai';\n\nimport { Link } from 'react-router-dom';\nimport {\n  Form, Container, PlaylistsContainer, Error,\n} from './styles';\n\nimport AddPlaylistService from '../../services/AddPlaylistService';\n\ninterface Playlist{\n    id: string;\n    channelId: string;\n    channelTitle: string;\n    title: string;\n    description: string;\n    thumbnail?: string;\n}\n\nconst Playlists: React.FC = () => {\n  const [url, setUrl] = useState('');\n  const [error, setError] = useState('');\n  const [playlists, setPlaylists] = useState<Playlist[]>(() => {\n    const storagedItems = localStorage.getItem('@YoutubePlaylistExplorer::playlists');\n    if (storagedItems) {\n      return JSON.parse(storagedItems);\n    }\n    return [];\n  });\n\n  useEffect(() => {\n    localStorage.setItem('@YoutubePlaylistExplorer::playlists',\n      JSON.stringify(playlists));\n  }, [playlists]);\n\n  async function handleShowPlaylist(e: FormEvent<HTMLFormElement>) {\n    e.preventDefault();\n    const addPlaylistService = new AddPlaylistService();\n    try {\n      const result = await addPlaylistService.execute(url);\n      const newPlaylist: Playlist = {\n        channelId: result.channelId,\n        channelTitle: result.channelTitle,\n        description: result.description,\n        id: result.id,\n        title: result.title,\n        thumbnail: result.thumbnail,\n      };\n      setPlaylists([...playlists, newPlaylist]);\n      setError('');\n    } catch (err) {\n      setError(err.message);\n    }\n    setUrl('');\n  }\n\n  return (\n    <>\n      <Container>\n        <h1>\n          <AiFillYoutube size={55} />\n          {' '}\n          Youtube Playlist Explorer\n        </h1>\n        <Form hasError={!!error} onSubmit={handleShowPlaylist}>\n          <input\n            value={url}\n            onChange={(e) => setUrl(e.target.value)}\n            placeholder=\"Paste the playlist link here...\"\n          />\n          <button type=\"submit\">Add</button>\n        </Form>\n        { error && <Error>{error}</Error>}\n        <PlaylistsContainer>\n          {playlists.map((playlist) => (\n            <Link key={playlist.id} to={`/videos/${playlist.id}`}>\n              <AiFillYoutube id=\"videoIcon\" size={60} />\n              <div>\n                <strong>\n                  {playlist.title}\n                </strong>\n                <p>{playlist.description}</p>\n              </div>\n              <AiOutlineCaretRight id=\"ClickIcon\" size={30} />\n            </Link>\n          ))}\n        </PlaylistsContainer>\n      </Container>\n    </>\n  );\n};\n\nexport default Playlists;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n    color: #fff;\n    max-width: 1000px;\n    display: flex;\n    flex-direction: column;\n    margin: 0 auto;\n    padding: 0 15px;\n    margin-top:80px;\n\n\n    #back{\n        width: 75px;\n        display: flex;\n        align-items: center;\n        margin-bottom: 40px;\n        font-size: 20px;\n        transition: color 0.2s;\n        text-decoration: none;\n        color: #fff;\n        svg{\n            margin-right: 5px;\n        }\n\n        &:hover{\n            color: #FF0000;\n            cursor: pointer;\n        }\n    }\n`;\n\nexport const Header = styled.div`\n    width: 100%;\n    height: 80px;\n    display: flex;\n    align-items: center;\n    background-color: #FFF;\n    color: #252525;\n    border-radius: 13px;\n    word-wrap: break-word;\n    text-overflow: ellipsis;\n    overflow: hidden;\n    overflow-wrap: break-word;\n    white-space: pre-line;\n    h1 {\n        font-size: 30px;\n    }\n    #HeaderLogo{\n        margin-right: 5px;\n    }\n\n    @media (max-width: 1025px){\n        h1 {\n            font-size: 20px;\n        }\n    }\n`;\n\nexport const PlaylistInfo = styled.div`\n    display: flex;\n    align-items: center;\n    font-size: 15px;\n    span{\n        align-items: center;\n        svg{\n            margin-left: 15px;\n            margin-right: 5px;\n        }\n    }\n`;\n\nexport const VideoContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    margin-top: 80px;\n\n    a{\n        display: flex;\n        text-decoration: none;\n        color: #fff;\n        background: #FF0000;\n        align-items: center;\n        padding: 10px 15px;\n        border-radius: 13px;\n        transition: transform 0.2s, background 0.2s;\n        #videoIcon{\n            margin-right: 20px;\n        }\n        #ClickIcon {\n            margin-left: auto;\n        }\n        div{\n            word-wrap: break-word;\n            text-overflow: ellipsis;\n            overflow: hidden;\n            overflow-wrap: break-word;\n            white-space: pre-line;\n            strong{\n                font-size: 26px;\n                span{\n                    font-size: 14px;\n                }\n            }\n            p{\n                display: flex;\n                align-items: center;\n                margin: 0 auto;\n                span{\n                    font-size: 14px;\n                    margin-right: 15px;\n                }\n            }\n        }\n        svg{\n            width: auto !important;\n            height: auto !important;\n        }\n\n        &:hover{\n            background: #af0404;\n            transform: translateX(15px);\n        }\n\n        & + a {\n            margin-top: 15px;\n        }\n\n    }\n    @media (max-width: 1025px){\n        a {\n            div {\n                strong {\n                    font-size: 20px;\n                }\n            }\n            svg{\n                width: 50px;\n            }\n        }\n    }\n`;\n\nexport const Loading = styled.div`\n    color: #fff;\n    max-width: 1000px;\n    display: flex;\n    flex-direction: column;\n    margin: 0 auto;\n    padding: 0 15px;\n    margin-top:100px;\n    font-size: 35px;\n\n    @keyframes colorAnimation {\n    0% {color: #fff; font-size: 35px;}\n    50% {color: #bbb; font-size: 36px; }\n    100% {color: #fff; font-size: 35px; }\n    }\n    animation-name: colorAnimation;\n    animation-duration: 1s;\n    animation-iteration-count: infinite;\n`;\n","import api from './api';\n\ninterface ResponseData {\n    playlistId: string;\n    nextPageToken?: string;\n    items: VideoResponse[];\n    pageInfo: {\n        totalResults: number;\n    }\n    haveMore?: boolean;\n}\n\ninterface VideoResponse{\n    id: string;\n    snippet: {\n        channelTitle: string;\n        channelId: string;\n        title: string;\n        description: string;\n        thumbnails: {\n            high: {url: string;}\n        }\n        resourceId: {\n            videoId: string;\n        }\n    }\n}\n\ninterface Videos {\n    videos: Video[];\n    hasMore?: boolean;\n}\n\ninterface Video{\n    id: string;\n    videoid: string;\n    title: string;\n    description: string;\n    channelTitle: string;\n    channelId: string;\n    thumb: string;\n}\n\nclass GetVideosFromPlaylistService {\n  public async execute(playlistId: string): Promise<Videos | null> {\n    if (!playlistId) {\n      throw new Error('Invalid playlist id');\n    }\n\n    const response = await api.get('/playlistItems', {\n      params: {\n        part: 'snippet',\n        playlistId,\n        maxResults: 50,\n        key: process.env.REACT_APP_GOOGLE_API_KEY,\n      },\n    });\n\n    if (response.status !== 200 && response.statusText !== 'ok') {\n      throw new Error('Error on get playlist from Google API');\n    }\n\n    const result = response.data as ResponseData;\n\n    if (!result.items.length || result.items.length === 0) {\n      return null;\n    }\n\n    const videos: Video[] = [];\n    result.items.forEach((video) => {\n      videos.push({\n        id: video.id,\n        videoid: video.snippet.resourceId.videoId,\n        title: video.snippet.title,\n        description: video.snippet.description,\n        thumb: video.snippet.thumbnails.high.url,\n        channelTitle: video.snippet.channelTitle,\n        channelId: video.snippet.channelId,\n      });\n    });\n\n    const playlistVideos: Videos = {\n      hasMore: !!result.nextPageToken,\n      videos,\n    };\n\n    return playlistVideos;\n  }\n}\n\nexport default GetVideosFromPlaylistService;\n","import React, { useEffect, useState } from 'react';\n\nimport { useRouteMatch, Link } from 'react-router-dom';\n\nimport {\n  AiFillCaretRight,\n  AiOutlineFolderOpen,\n  AiOutlineArrowLeft,\n  AiOutlineCamera,\n  AiOutlineLike,\n  AiOutlineMessage,\n  AiOutlineDislike,\n  AiOutlineEye,\n} from 'react-icons/ai';\n\nimport {\n  Container, Header, PlaylistInfo, VideoContainer, Loading,\n} from './styles';\n\nimport GetVideosFromPlaylistService from '../../services/GetVideosFromPlaylistService';\n\ninterface VideoParams {\n    id: string;\n}\n\ninterface Playlist{\n    id: string;\n    channelId: string;\n    channelTitle: string;\n    title: string;\n    description: string;\n    thumbnail?: string;\n}\n\ninterface Video{\n    id: string;\n    videoid: string;\n    title: string;\n    description: string;\n    channelTitle: string;\n    channelId: string;\n    thumb: string;\n}\n\nconst Video: React.FC = () => {\n  const [playlists] = useState<Playlist[]>(() => {\n    const storagedItems = localStorage.getItem('@YoutubePlaylistExplorer::playlists');\n    if (storagedItems) {\n      return JSON.parse(storagedItems);\n    }\n    return [];\n  });\n\n  const [playlist, setPlaylist] = useState<Playlist>();\n\n  const [videos, setVideos] = useState<Video[]>([]);\n\n  const [status, setStatus] = useState('Loading...');\n\n  const { params } = useRouteMatch<VideoParams>();\n\n  useEffect(() => {\n    const playlistID = playlists.findIndex((play) => play.id === params.id);\n    if (playlistID >= 0) {\n      setPlaylist(playlists[playlistID]);\n      const getVideosFromPlaylistService = new GetVideosFromPlaylistService();\n      getVideosFromPlaylistService.execute(playlists[playlistID].id).then((response) => {\n        if (response) {\n          setVideos(response.videos);\n        } else {\n          setStatus('Internal error');\n        }\n      });\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <>\n      <Container>\n        <Link id=\"back\" to=\"/playlists\">\n          <AiOutlineArrowLeft size={20} />\n          {' '}\n          voltar\n        </Link>\n        {playlist\n            && (\n            <Header>\n              <AiFillCaretRight id=\"HeaderLogo\" size={60} />\n              <div>\n                <h1>{playlist.title}</h1>\n                <PlaylistInfo>\n                  {`${playlist.description.substr(0, 25)}...`}\n                  <span>\n                    <AiOutlineFolderOpen size={15} />\n                    {videos ? videos.length : 'n/a'}\n                    {' '}\n                    files\n                  </span>\n                </PlaylistInfo>\n              </div>\n            </Header>\n            )}\n        <VideoContainer>\n          {playlist\n            && videos.length > 0\n            ? videos.map((video) => (\n              <Link to={`/watch/${playlist.id}/${video.videoid}`}>\n                <AiFillCaretRight id=\"videoIcon\" size={60} />\n                <div>\n                  <strong>\n                    {video.title}\n                  </strong>\n                  <p>\n                    <AiOutlineEye size={14} />\n                    {' '}\n                    <span>16,000</span>\n                    <AiOutlineLike size={14} />\n                    {' '}\n                    <span>150</span>\n                    <AiOutlineDislike size={14} />\n                    {' '}\n                    <span>8</span>\n                    <AiOutlineMessage size={14} />\n                    {' '}\n                    <span>400</span>\n                  </p>\n                </div>\n                <AiOutlineCamera id=\"ClickIcon\" size={30} />\n              </Link>\n            ))\n            : <Loading>{status}</Loading>}\n        </VideoContainer>\n\n      </Container>\n    </>\n  );\n};\n\nexport default Video;\n","import styled from 'styled-components';\n\nexport const VideoContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    max-width: 1000px;\n    margin: 0 auto;\n    padding: 0 15px;\n    margin-top: 100px;\n    align-items: center;\n\n    #back{\n        width: 75px;\n        display: flex;\n        align-items: center;\n        font-size: 20px;\n        transition: color 0.2s;\n        text-decoration: none;\n        color: #fff;\n        svg{\n            margin-right: 5px;\n        }\n\n        &:hover{\n            color: #FF0000;\n            cursor: pointer;\n        }\n    }\n\n    #videoArea{\n        width: 100%;\n        margin-bottom: 70px;\n    }\n\n    div{\n\n        iframe{\n            border: 7px solid #FF0000;\n            border-radius: 13px;\n            transition: border-color 0.2s;\n            &:hover{\n                border-color: #fff;\n            }\n        }\n\n        #videoName{\n        display: flex;\n        align-items: center;\n        justify-content: start;\n        margin-top: 15px;\n        h1{\n        color: #fff;\n        font-size: 30px;\n        }\n        svg{\n            color: #fff;\n            margin-left: -8px;\n        }\n    }\n    }\n\n    @media (max-width: 815px){\n        div{\n            iframe{\n                max-width: 90vw;\n                max-height: 30vh;\n            }\n        }\n    }\n\n`;\n\nexport const ButtonArea = styled.div`\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n    margin-top: 50px;\n    border: none;\n    button {\n        border: 0;\n        border-radius: 30px;\n        background: #FFF;\n        margin-left: 10px;\n        height: 70%;\n        font-size: 25px;\n        font-weight: bold;\n        color: #252525;\n        padding: 10px 20px;\n        transition: color 0.2s, background 0.2s;\n\n        &:hover {\n            cursor: pointer;\n            color: #FFF;\n            background: #FF0000;\n        }\n\n    }\n`;\n","import React, { useState, useEffect } from 'react';\nimport YouTube, { Options } from 'react-youtube';\nimport { AiFillCaretRight, AiOutlineArrowLeft } from 'react-icons/ai';\nimport { Link, useRouteMatch } from 'react-router-dom';\nimport { VideoContainer, ButtonArea } from './styles';\n\ninterface VideoParams{\n    id: string;\n    playlistid: string;\n}\n\ninterface Playlist{\n    id: string;\n    channelId: string;\n    channelTitle: string;\n    title: string;\n    description: string;\n    thumbnail?: string;\n}\n\nconst Watch: React.FC = () => {\n  const [playlists] = useState<Playlist[]>(() => {\n    const storagedItems = localStorage.getItem('@YoutubePlaylistExplorer::playlists');\n    if (storagedItems) {\n      return JSON.parse(storagedItems);\n    }\n    return [];\n  });\n\n  const [playlist, setPlaylist] = useState<Playlist>();\n\n  const { params } = useRouteMatch<VideoParams>();\n\n  useEffect(() => {\n    const playlistID = playlists.findIndex((play) => play.id === params.playlistid);\n    if (playlistID >= 0) {\n      setPlaylist(playlists[playlistID]);\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  const opts: Options = {\n    width: '640',\n    height: '390',\n    playerVars: {\n      // https://developers.google.com/youtube/player_parameters\n    },\n  };\n\n  const videoID = params.id;\n\n  return (\n    <>\n      <VideoContainer>\n        <div id=\"videoArea\">\n          { playlist && (\n          <Link id=\"back\" to={`/videos/${playlist.id}`}>\n            <AiOutlineArrowLeft size={20} />\n            {' '}\n            voltar\n          </Link>\n          )}\n        </div>\n        <div>\n          <YouTube videoId={videoID} opts={opts} />\n          <div id=\"videoName\">\n            <AiFillCaretRight size={30} />\n            <h1>Video Name</h1>\n          </div>\n        </div>\n        <ButtonArea>\n          <button type=\"button\">Next</button>\n          <button type=\"button\">Previous</button>\n        </ButtonArea>\n      </VideoContainer>\n    </>\n  );\n};\n\nexport default Watch;\n","import styled, { css } from 'styled-components';\n\ninterface menuSideBarProps{\n    showSidebar: boolean;\n}\n\nexport const Nav = styled.nav<menuSideBarProps>`\n    display: flex;\n    justify-content: space-between;\n    max-width: 1000px;\n    margin: 8px auto;\n    padding: 0 15px;\n    height: 34px;\n    color: #FFF;\n\n    #menuSideBar{\n        display: none;\n        background: none;\n        height: 100%;\n        align-items: center;\n        margin: 0;\n    }\n\n\n\n    @keyframes slidein {\n        0% {\n            transform: translateX(-45vw);\n        }\n\n        100% {\n            transform: translateX(0);\n        }\n    }\n    @keyframes slideout {\n        0% {\n            transform: translateX(0);\n        }\n\n        100% {\n            transform: translateX(-45vw);\n        }\n    }\n\n    div{\n        display: flex;\n        height: 100%;\n        align-items: center;\n        a{\n            display: flex;\n            color: #FFF;\n            align-items: center;\n            text-decoration: none;\n            font-size: 16px;\n            transition: color 0.2s;\n            svg{\n                margin-right: 5px;\n            }\n            &:hover {\n                cursor: pointer;\n                color: #FF0000;\n                svg {color: #FF0000;}\n            }\n\n            & + a {\n                margin-left: 15px;\n            }\n\n        }\n    }\n\n    svg{\n        color: #FFF;\n        transition: color 0.2s;\n        margin: 0 auto;\n\n        &:hover {\n            color: #FF0000;\n        }\n    }\n\n    input {\n        border: 0;\n        border-radius: 12px;\n        padding: 0 12px;\n        font-size: 14px;\n        height: 70%;\n    }\n\n    button {\n        border: 0;\n        border-radius: 12px;\n        background: #FFF;\n        margin-left: 10px;\n        height: 70%;\n        font-size: 14px;\n        color: #252525;\n        padding: 0 12px;\n        transition: color 0.2s, background 0.2s;\n\n        &:hover {\n            cursor: pointer;\n            color: #FFF;\n            background: #FF0000;\n        }\n\n    }\n\n    #menuSide{\n        height: 100vh;\n        width: 45vw;\n        display: none;\n        animation-duration: 0.4s;\n        animation-name: slidein;\n        position: absolute;\n        background: #FF0000;\n        margin: -15px;\n        padding-top: 20vw;\n        align-items: center;\n        justify-content: start;\n        z-index: 1;\n        ${(props) => (props.showSidebar\n            && css`\n            display: flex;\n            flex-direction: column;\n            justify-content: start;\n            a{\n                font-size: 25px;\n                & + a { margin-left: 0}\n                &:hover{ color: #282828; svg{ color: #282828; } }\n            }\n            `)}\n    }\n\n    #menuSideFormBar{\n        display: flex;\n        flex-direction: column;\n        input{\n            margin-top: 20px;\n            border: 0;\n            border-radius: 12px;\n            padding: 0 12px;\n            font-size: 14px;\n            height: 35px;\n            width: 90%;\n        }\n        button {\n        border: 0;\n        border-radius: 12px;\n        background: #FFF;\n        margin-top: 20px;\n        margin-left: 0;\n        width: 90%;\n        height: 35px;\n        font-size: 14px;\n        color: #252525;\n        padding: 0 12px;\n        transition: color 0.2s, background 0.2s;\n\n        &:hover {\n            cursor: pointer;\n            color: #FFF;\n            background: #FF0000;\n        }\n        }\n    }\n\n    @media (max-width: 555px){\n        justify-content: start;\n        #menuIconBar{\n            display: none;\n        }\n        #menuFormBar{\n            display: none;\n        }\n        #menuSideBar{\n            display: flex;\n            z-index: 2;\n            ${(props) => props.showSidebar\n            && css`\n             &:hover{\n                svg{color: #282828;}\n            }`}\n\n        }\n    }\n\n`;\n","import React, { useState } from 'react';\nimport {\n  AiFillYoutube, AiOutlineHome, AiOutlinePlayCircle, AiOutlineBars, AiOutlineCloseCircle,\n} from 'react-icons/ai';\nimport { Link } from 'react-router-dom';\n\nimport { Nav } from './styles';\n\nconst Header: React.FC = () => {\n  const [showSidebar, setShowSideBar] = useState(false);\n\n  function handleShowSideBar() {\n    setShowSideBar(!showSidebar);\n  }\n\n  return (\n    <Nav showSidebar={showSidebar}>\n      <button type=\"button\" id=\"menuSideBar\" onClick={handleShowSideBar}>\n        {showSidebar\n          ? <AiOutlineCloseCircle size={25} />\n          : <AiOutlineBars size={25} />}\n      </button>\n      <div id=\"menuSide\">\n        <Link onClick={handleShowSideBar} to=\"/\">\n          Home\n        </Link>\n        <Link onClick={handleShowSideBar} to=\"/playlists\">\n          Playlist\n        </Link>\n        <div id=\"menuSideFormBar\">\n          <input placeholder=\"Search video...\" />\n          <button type=\"button\">Search</button>\n        </div>\n      </div>\n      <div id=\"menuIconBar\">\n        <Link to=\"/\">\n          <AiOutlineHome size={16} />\n          {' '}\n          Home\n        </Link>\n        <Link to=\"/playlists\">\n          <AiOutlinePlayCircle size={16} />\n          {' '}\n          Playlist\n        </Link>\n      </div>\n      <AiFillYoutube id=\"logo\" size={34} />\n      <div id=\"menuFormBar\">\n        <input placeholder=\"Search video...\" />\n        <button type=\"button\">Search</button>\n      </div>\n    </Nav>\n  );\n};\n\nexport default Header;\n","import { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`\n    * {\n        margin: 0;\n        padding: 0;\n        outline: 0;\n        box-sizing: border-box;\n        font: 16px Roboto, 'Helvetica Neue', 'Helvetica',sans-serif;\n    }\n\n    body {\n        background: #252525;\n    }\n\n`;\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport Home from './Pages/Home';\nimport Playlist from './Pages/Playlists';\nimport Video from './Pages/Videos';\nimport Watch from './Pages/Watch';\n\nimport Header from './Components/Header';\n\nimport GlobalStyle from './styles/Global';\n\nconst App: React.FC = () => (\n  <>\n    <BrowserRouter>\n      <Header />\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/playlists\" component={Playlist} />\n        <Route path=\"/videos/:id\" component={Video} />\n        <Route path=\"/watch/:playlistid/:id\" component={Watch} />\n      </Switch>\n    </BrowserRouter>\n    <GlobalStyle />\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}